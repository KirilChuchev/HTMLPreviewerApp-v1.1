<link rel="stylesheet" href="/css/htmlSamplePage.css" type="text/css" />
<script src="~/js//site.js" type="text/javascript"></script>

@model HTMLPreviewerApp.Models.HTMLSample.HtmlSampleHomeViewModel

@{
    ViewData["Title"] = "Home Page";
    var htmlSamples = Model?.HtmlSamples?.OrderByDescending(x => x.CreatedOn).ToList();
    var currentHtmlSample = Model?.CurrentHtmlSample;

    var currentRawHtml = Model?.CurrentHtmlSample?.RawHtml;
    var tempRawHtml = Model?.TempRawHtml;

    var currentHtmlSampleIndex =
        currentHtmlSample != null
        ? htmlSamples?.FindIndex(x => x.CreatedOn.ToString().Equals(currentHtmlSample?.CreatedOn.ToString(), StringComparison.Ordinal))
        : null;

    var newHtmlSampleIndex = $"{htmlSamples.Count - currentHtmlSampleIndex}{(currentHtmlSample != null ? "." : "")}";
}

@{
    var modelState = ViewContext.ViewData.ModelState;
    var errors = modelState.Select(x => x.Value).Select(x => x.Errors).ToArray();
    var hasErrorHere = false;
}

<article class="main-wrapper">
    <article class="left">
        <section class="input-wrapper">
            @{
                if (errors.Length > 0)
                {
                    hasErrorHere = errors[0]
                                    .Select(x => x.ErrorMessage)
                                    .FirstOrDefault(x => x.Contains("Полето")) != null;
                }


            }

            <span class="number">@(!hasErrorHere ? newHtmlSampleIndex : "") </span>
            @using (Html.BeginForm("SwitchAction", "HtmlSample", FormMethod.Post))
            {
                <div class="error-message" asp-validation-summary="ModelOnly"></div>
                <textarea asp-for="TempRawHtml" rows="10" cols="70">@Model.TempRawHtml</textarea>
                <span class="error-message" asp-validation-for="TempRawHtml"></span>
                <input type="hidden" asp-for="@Model.CurrentHtmlSample.Id" />
                <section class="button-wrapper">
                    <input class="submit-button" type="submit" name="submitButton" value="Run" />
                    <input class="submit-button" type="submit" name="submitButton" value="Save" />
                    <input class="submit-button" type="submit" name="submitButton" value="Check original" />
                </section>
            }
        </section>

        <section class="samples-list-wrapper">
            <span class="samples-list-title">Html Samples:</span>

            @{
                for (int i = 0; i <= htmlSamples.Count - 1; i++)
                {
                    <section class="sample-wrapper">
                        <section class="first-row">
                            <span>@(htmlSamples.Count - i).</span>
                            @using (Html.BeginForm("Index", "HtmlSample", FormMethod.Get))
                            {
                                <input type="hidden" name="htmlSampleId" value="@htmlSamples[i].Id" />
                                <input type="submit" style="background-color: darkgrey" value="Open" />
                            }
                            <span>Created on: @htmlSamples[i].CreatedOn</span>
                            <span>Last edited on: @htmlSamples[i].LastEditedOn</span>


                        </section>

                        <section class="second-row">
                            <input type="text" value="@htmlSamples[i].Url" id="@htmlSamples[i].Id" />
                            <button onclick='copyUrl("@htmlSamples[i].Id")'>Copy shareable Url</button>
                        </section>
                    </section>
                }
            }
        </section>
    </article>

    <article class="right">
        <section class="preview">
            @if (this.TempData["Run"] != null)
            {
                <span class="preview-content">
                    @Html.Raw($"<fragment>{tempRawHtml}</fragment>")

                </span>

            }
        </section>
    </article>
</article>


@{
    if (this.TempData["checkOriginal"] != null)
    {
        var value = Model.IsEqualWithOriginal == true ? "equal" : "not equal";

        <script>checkOriginal(`@(value)`)</script>

    }

    if (this.TempData["submitButton"] != null)
    {
        var submitButtonValue = this.TempData["submitButton"];
        var number = htmlSamples.Count - currentHtmlSampleIndex;
        <script type="text/javascript">
    window.onload = function () {
        showSaveNotification(@number, '@submitButtonValue');
    };
        </script>
    }
}

<script>
    function copyUrl(id) {
        let copyUrlText = document.getElementById(id);
        copyUrlText.select();
        copyUrlText.setSelectionRange(0, 99999)
        document.execCommand("copy");
        alert("Copied URL: " + copyUrlText.value);
    }

    function showSaveNotification(number, notificationText) {
        alert(`HTML Sample #${number}. was ${notificationText}!`);
    }
</script>
